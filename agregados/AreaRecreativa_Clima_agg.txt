use ej1

db.AreaRecreativaClima.aggregate([
    // Encontrar los Incidentes
    {
        $lookup:
        {
            from: "IncidenteSeguridad",
            localField: "incidentesSeguridad",
            foreignField: "id",
            as: "RefIncidentes"
        } 
    },
    // Encontrar los juegos
    {
        $lookup:
        {
            from: "IncidenteSeguridad",
            localField: "Juego",
            foreignField: "id",
            as: "RefJuegos"
        } 
    },
    // project para crear todos los atributos
    {
        $project:
        {
            // area recreativa
            "id": 1,
            "coordenadasGPS": 1,
            "barrio": 1,
            "distrito": 1,
            "fecha": 1,
            "estadoGlobalArea": 1,
            "capacidadMaxima": 1,
            "cantidadJuegosTipo": 1,
            "juegos": 1,
            "incidentesSeguridad": 1,
            "registrosClima": 1,
            "encuestas": 1,
            // Referencia Juegos
            RefJuego: "$juegos",
            // Referencia con resumen IncidenteSeguridad
            "RefIncidentes.fechaDeReporte": 1,
            "RefIncidentes.tipoIncidente": 1,
            "RefIncidentes.gravedad": 1,
            // Referencia Clima
            RefClima: "$registrosClima",
            // Encuesta Satisfaccion
            RefEncuestas: "$encuestas"
        }
    },
    // estado global area
    {
        $addFields: {
            estadoGlobalArea: {
                $cond: {
                    if: {
                        $anyElementTrue: {
                            $map: {
                                input: { $ifNull: ["$RefIncidentes.gravedad", []] },  // Asegura que RefIncidentes.gravedad sea un array
                                as: "gravedad",
                                in: { $eq: ["$$gravedad", "CRITICA"] }  // Verifica si alguna gravedad es "CRITICA"
                            }
                        }
                    },
                    then: "PELIGRO",  // Si hay "CRITICA", se asigna "PELIGRO"
                    else: {
                        $cond: {
                            if: {
                                $anyElementTrue: {
                                    $map: {
                                        input: { $ifNull: ["$RefIncidentes.gravedad", []] },  // Asegura que RefIncidentes.gravedad sea un array
                                        as: "gravedad",
                                        in: { $eq: ["$$gravedad", "ALTA"] }  // Verifica si alguna gravedad es "ALTA"
                                    }
                                }
                            },
                            then: "MEDIO",  // Si hay "ALTA", se asigna "MEDIO"
                            else: "BAJO"  // Si no hay ni "CRITICA" ni "ALTA", se asigna "BAJO"
                        }
                    }
                }
            }
        }
    }, 
    {
        $out: {db:"ej1", coll: "AgregadoAreaRecreativaClima"}
    }
])