
use ej1

// agregado Areas Recreativas
db.AreaRecreativaClima.aggregate([
    // Encontrar los Incidentes
    {
        $lookup:
        {
            from: "IncidenteSeguridad",
            localField: "incidentesSeguridad",
            foreignField: "id",
            as: "RefIncidentes"
        } 
    },
    // Encontrar los juegos
    {
        $lookup:
        {
            from: "IncidenteSeguridad",
            localField: "Juego",
            foreignField: "id",
            as: "RefJuegos"
        } 
    },
    // project para crear todos los atributos
    {
        $project:
        {
            // area recreativa
            "id": 1,
            "coordenadasGPS": 1,
            "barrio": 1,
            "distrito": 1,
            "fecha": 1,
            "estadoGlobalArea": 1,
            "capacidadMaxima": 1,
            "cantidadJuegosTipo": 1,
            "juegos": 1,
            "incidentesSeguridad": 1,
            "registrosClima": 1,
            "encuestas": 1,
            // Referencia Juegos
            RefJuego: "$juegos",
            // Referencia con resumen IncidenteSeguridad
            "RefIncidentes.fechaDeReporte": 1,
            "RefIncidentes.tipoIncidente": 1,
            "RefIncidentes.gravedad": 1,
            // Referencia Clima
            RefClima: "$registrosClima",
            // Encuesta Satisfaccion
            RefEncuestas: "$encuestas"
        }
    },
    // estado global area
    {
        $addFields: {
            estadoGlobalArea: {
                $cond: {
                    if: {
                        $anyElementTrue: {
                            $map: {
                                input: { $ifNull: ["$RefIncidentes.gravedad", []] },  // Asegura que RefIncidentes.gravedad sea un array
                                as: "gravedad",
                                in: { $eq: ["$$gravedad", "CRITICA"] }  // Verifica si alguna gravedad es "CRITICA"
                            }
                        }
                    },
                    then: "PELIGROSO",  // Si hay "CRITICA", se asigna "PELIGRO"
                    else: {
                        $cond: {
                            if: {
                                $anyElementTrue: {
                                    $map: {
                                        input: { $ifNull: ["$RefIncidentes.gravedad", []] },  // Asegura que RefIncidentes.gravedad sea un array
                                        as: "gravedad",
                                        in: { $eq: ["$$gravedad", "ALTA"] }  // Verifica si alguna gravedad es "ALTA"
                                    }
                                }
                            },
                            then: "PRECAUCION",  // Si hay "ALTA", se asigna "MEDIO"
                            else: "NORMAL"  // Si no hay ni "CRITICA" ni "ALTA", se asigna "BAJO"
                        }
                    }
                }
            }
        }
    },
    // Llevarlo a una colecci贸n nueva  
    {
        $out: {db:"ej1", coll: "AgregadoAreaRecreativaClima"}
    }
])

// Agregado Incidencia
db.Incidencia.aggregate([
    // Crear atributos usando project
    {
	$project:
        {
            "id": 1,
            "fechaReporte": 1,
	    "tipo": 1,
	    "estado": 1,
	    "tiempoResolucion": 1,
	    "nivelEscalamiento": 1,
	    RefUsuarios: "$usuarios"
        }
    },
    // Llevarlo a una colecci贸n nueva  
    {
        $out: {db:"ej1", coll: "AgregadoIncidencia"}
    }

])

// Agregado Juego
db.Juego.aggregate([
    // Etapa de $lookup para unir con la colecci贸n 'id'
    {
        $lookup: {
            from: "Incidencia",
            localField: "incidencias", 
            foreignField: "id", 
            as: "Inc"
        }
    },
    // Etapa de $project para seleccionar y renombrar los campos deseados
    {
        $project: {
            "id": 1,
            "modelo": 1,
            "estadoOperativo": 1,
            "accesibilidad": 1,
            "fechaInstalacion": 1,
            "tipo": 1,
            "desgasteAcumulado": 1,
            "indicadorExposicion": 1,
            "ultimaFechaMantenimiento": 1,
            "mantenimientos": 1,
            "incidencias": 1,
            //RefMantenimiento
            RefMant: "$Mantenimiento",
            //RefIncidencia - selecciona campos de 'Inc' obtenido en $lookup
            "Inc.fechaReporte": 1,
            "Inc.tipo": 1,
            "Inc.estado": 1
        }
    },
    // Etapa de $out para exportar los resultados a otra colecci贸n
    {
        $out: { db: "ej1", coll: "AgregadoJuego" }
    }
])


